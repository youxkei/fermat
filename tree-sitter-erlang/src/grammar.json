{
  "name": "erlang",
  "word": "atom",
  "rules": {
    "source_file": {
      "type": "REPEAT1",
      "content": {
        "type": "SYMBOL",
        "name": "form"
      }
    },
    "form": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_attribute"
            },
            {
              "type": "SYMBOL",
              "name": "_function_or_macro"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "."
        }
      ]
    },
    "_attribute": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "module_attribute"
        },
        {
          "type": "SYMBOL",
          "name": "export_attribute"
        }
      ]
    },
    "module_attribute": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "STRING",
          "value": "module"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "atom"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "export_attribute": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "STRING",
          "value": "export"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "export_mfa"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "export_mfa"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "export_mfa": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "atom"
        },
        {
          "type": "STRING",
          "value": "/"
        },
        {
          "type": "SYMBOL",
          "name": "integer"
        }
      ]
    },
    "_function_or_macro": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "function"
        }
      ]
    },
    "function": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "function_clause"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ";"
              },
              {
                "type": "SYMBOL",
                "name": "function_clause"
              }
            ]
          }
        }
      ]
    },
    "function_clause": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "atom"
        },
        {
          "type": "SYMBOL",
          "name": "pat_argument_list"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "clause_guard"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "->"
        },
        {
          "type": "SYMBOL",
          "name": "exprs"
        }
      ]
    },
    "pat_argument_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "clause_guard": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "when"
        }
      ]
    },
    "exprs": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expr"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "expr"
              }
            ]
          }
        }
      ]
    },
    "expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "function_call"
        },
        {
          "type": "SYMBOL",
          "name": "expr_remote"
        }
      ]
    },
    "function_call": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expr_remote"
        },
        {
          "type": "SYMBOL",
          "name": "argument_list"
        }
      ]
    },
    "expr_remote": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expr_max"
        },
        {
          "type": "PREC_LEFT",
          "value": 800,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "expr_max"
              },
              {
                "type": "STRING",
                "value": ":"
              },
              {
                "type": "SYMBOL",
                "name": "expr_max"
              }
            ]
          }
        }
      ]
    },
    "expr_max": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_atomic"
        }
      ]
    },
    "argument_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "exprs"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "_atomic": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "atom"
        },
        {
          "type": "SYMBOL",
          "name": "strings"
        }
      ]
    },
    "atom": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "'(\\\\.|[^'])*'"
          },
          {
            "type": "PATTERN",
            "value": "[a-z][a-zA-Z0-9_@]*"
          }
        ]
      }
    },
    "integer": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "-?\\d[\\d_]*"
          },
          {
            "type": "PATTERN",
            "value": "-?\\d+#[a-fA-F\\d][a-fA-F\\d_]*"
          }
        ]
      }
    },
    "strings": {
      "type": "REPEAT1",
      "content": {
        "type": "SYMBOL",
        "name": "string"
      }
    },
    "string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "PREC",
                  "value": 1,
                  "content": {
                    "type": "PATTERN",
                    "value": "[^\"\\\\]+"
                  }
                }
              },
              {
                "type": "SYMBOL",
                "name": "_escape_sequence"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "_escape_sequence": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^xuU]"
              },
              {
                "type": "PATTERN",
                "value": "\\d{1,3}"
              },
              {
                "type": "PATTERN",
                "value": "x[0-9a-fA-F]{1,}"
              }
            ]
          }
        ]
      }
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "%[^%].*"
      }
    },
    "line_comment": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "%%.*"
      }
    },
    "_newline": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\\n"
      }
    },
    "multiple_newlines": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\\n\\n+"
      }
    },
    "_spaces": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[ \\t\\r]"
      }
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "comment"
    },
    {
      "type": "SYMBOL",
      "name": "line_comment"
    },
    {
      "type": "SYMBOL",
      "name": "multiple_newlines"
    },
    {
      "type": "SYMBOL",
      "name": "_newline"
    },
    {
      "type": "SYMBOL",
      "name": "_spaces"
    }
  ],
  "conflicts": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

